{"version":3,"sources":["Converter.js","components/Header.js","components/Input.js","components/Output.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["data","withStyles","theme","root","width","height","margin","background","color","cursor","fontSize","lineHeight","fontWeight","textAlign","breakpoints","down","position","top","left","classes","className","display","justifyContent","up","padding","flexDirection","boxShadow","transition","backgroundColor","palette","primary","light","input","flexGrow","marginRight","marginBottom","handleSubmit","useState","value","setValue","OutlinedInput","autoFocus","placeholder","onChange","e","target","onKeyPress","key","blur","handleKeyPress","Button","variant","onClick","getData","a","fetch","response","json","parseToRGB","origin","string","startsWith","length","substring","toLowerCase","split","every","digit","includes","hexString","numsString","rStr","gStr","bStr","convertDigit","mapToNum","char","isNaN","parseInt","firstChar","secondChar","r","g","b","parseHex","replace","endsWith","nums","member","num","parseFloat","Number","isInteger","isRGB","Error","rgbString","map","parseRGB","computeSimilarity","distance","maxDistance","Math","round","Promise","res","rej","colors","distancesToCompute","forEach","color1","color2","push","rgb","pow","all","distances","max","results","index","hsl","h","s","l","similarity","sort","loading","title","alignItems","marginTop","maxWidth","borderRadius","button","transform","mobileHidden","isInitialMount","useRef","isLoading","setIsLoading","setData","error","setError","numDisplayed","setNumDisplayed","useEffect","current","Converter","then","catch","finally","Fragment","style","Table","table","TableHead","TableRow","TableCell","TableBody","slice","colorId","newNumDisplayed","displayMore","Divider","href","rel","minHeight","paddingTop","secondary","main","textDecoration","setInput","Container","Boolean","window","location","hostname","match","createMuiTheme","typography","textTransform","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df913fbc.chunk.js","sourcesContent":["let data;\n\nconst getData = async () => {\n  if (!data) {\n    const response = await fetch('/data.json');\n    data = await response.json();\n  }\n  return data;\n};\n\nconst isHex = string => {\n  return (\n    string.startsWith('#') &&\n    string.length === 7 &&\n    string.substring(1).toLowerCase().split('').every((digit) => {\n      return '0123456789abcdef'.split('').includes(digit);\n    })\n  );\n};\n\nconst isRGB = string => {\n  string = string.toLowerCase().replace(/\\s/g,'');\n  if (string.startsWith('rgb(') && string.endsWith(')')) {\n    const nums = string.substring(4, string.length - 1).split(',');\n    return (\n      nums.length === 3 &&\n      nums.every(member => {\n        const num = parseFloat(member);\n        return (\n          !isNaN(num) &&\n          Number.isInteger(num) &&\n          num >= 0 &&\n          num <= 255\n        );\n      })\n    );\n  };\n  return false;\n};\n\nconst parseHex = hexString => {\n  const numsString = hexString.substring(1);\n  const rStr = numsString.substring(0, 2);\n  const gStr = numsString.substring(2, 4);\n  const bStr = numsString.substring(4, 6);\n\n  const convertDigit = digit => {\n    const mapToNum = char => {\n      if (isNaN(parseInt(char))) {\n        return {\n          'a': 10,\n          'b': 11,\n          'c': 12,\n          'd': 13,\n          'e': 14,\n          'f': 15\n        }[char.toLowerCase()];\n      }\n      return parseInt(char);\n    };\n\n    const firstChar = digit.substring(0, 1);\n    const secondChar = digit.substring(1);\n    return mapToNum(firstChar) * 16 + mapToNum(secondChar);\n  };\n\n  return {\n    r: convertDigit(rStr),\n    g: convertDigit(gStr),\n    b: convertDigit(bStr)\n  };\n};\n\nconst parseRGB = rgbString => {\n  rgbString = rgbString.replace(/\\s/g,'');\n  const nums = rgbString\n    .substring(4, rgbString.length - 1)\n    .split(',')\n    .map(num => parseInt(num));\n\n  return {\n    r: nums[0],\n    g: nums[1],\n    b: nums[2]\n  };\n};\n\nconst parseToRGB = input => {\n  let origin;\n  if (isHex(input)) {\n    origin = parseHex(input);\n  } else if (isRGB(input)) {\n    origin = parseRGB(input);\n  } else {\n    throw new Error();\n  }\n  return origin;\n};\n\nconst computeColorDistance = (\n  color1,\n  color2\n) => {\n  return new Promise((res, rej) => {\n    res(\n      Math.pow(color1.r - color2.r, 2) +\n      Math.pow(color1.g - color2.g, 2) +\n      Math.pow(color1.b - color2.b, 2)\n    );\n  });\n};\n\nconst computeSimilarity = (distance, maxDistance) => {\n  return 100 - Math.round((distance / maxDistance) * 100);\n};\n\nconst findSimilarEuclidean = input => {\n  return new Promise(async (res, rej) => {\n    const colors = await getData();\n    let origin;\n\n    try {\n      origin = parseToRGB(input);\n    } catch (e) {\n      return rej(`${input} is not a valid HEX or RGB color.`);\n    }\n\n    const distancesToCompute = [];\n    colors.data.forEach(color => {\n      distancesToCompute.push(computeColorDistance(color.rgb, origin));\n    });\n\n    const distances = await Promise.all(distancesToCompute);\n    const maxDistance = Math.max(...distances);\n\n    const results = colors.data.map((color, index) => ({\n      ...color,\n      rgb: `rgb(${color.rgb.r},${color.rgb.g},${color.rgb.b})`,\n      hsl: `hsl(${color.hsl.h},${color.hsl.s}%,${color.hsl.l}%)`,\n      similarity: computeSimilarity(distances[index], maxDistance)\n    }));\n    results.sort((a, b) => b.similarity - a.similarity);\n\n    return res(results);\n  });\n};\n\nexport default { findSimilarEuclidean };\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    height: '50px',\n    margin: '0 0 2rem',\n    background: 'linear-gradient(45deg, #fe6b8b 30%, #ff8e53 90%)',\n    color: '#ffffff',\n    cursor: 'default',\n    fontSize: '2em',\n    lineHeight: '50px',\n    fontWeight: 'lighter',\n    textAlign: 'center',\n    [theme.breakpoints.down('sm')]: {\n      position: 'absolute',\n      top: '0',\n      left: '0'\n    }\n  }\n});\n\nconst Header = ({ classes }) => (\n  <header className={classes.root}>\n    COLOR CONVERTER\n  </header>\n);\n\nexport default withStyles(styles)(Header);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  OutlinedInput,\n  Button\n} from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '0 0 2em',\n    [theme.breakpoints.up('md')]: {\n      padding: '0 20%'\n    },\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column'\n    },\n    '& > button': {\n      color: '#ffffff',\n      boxShadow: 'none',\n      transition: 'all 100ms linear 0s',\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n        boxShadow: 'none'\n      }\n    }\n  },\n  input: {\n    flexGrow: '1',\n    [theme.breakpoints.up('md')]: {\n      marginRight: '1em'\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: '0.5em'\n    }\n  }\n});\n\nconst Input = ({\n  classes,\n  handleSubmit\n}) => {\n  const [value, setValue] = useState('');\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSubmit(value);\n      e.target.blur();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <OutlinedInput\n        className={classes.input}\n        autoFocus\n        placeholder=\"Try a color, e.g #ff7875 or rgb(255,145,143)\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        onKeyPress={e => handleKeyPress(e)}\n      />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => handleSubmit(value)}\n      >\n        CONVERT\n      </Button>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Input);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button\n} from '@material-ui/core';\nimport Converter from '../Converter';\n\nconst styles = theme => ({\n  loading: {\n    textAlign: 'center'\n  },\n  title: {\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: '1em'\n    },\n    '& > h1': {\n      margin: '0.5em',\n      [theme.breakpoints.down('sm')]: {\n        maxWidth: '75%',\n        fontSize: '1.5em'\n      }\n    },\n    '& > div': {\n      width: '50px',\n      height: '50px',\n      borderRadius: '50%'\n    }\n  },\n  button: {\n    position: 'relative',\n    left: '50%',\n    transform: 'translate(-50%, 50%)'\n  },\n  mobileHidden: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  }\n});\n\nconst Output = ({\n  classes,\n  input\n}) => {\n  const isInitialMount = useRef(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [numDisplayed, setNumDisplayed] = useState(50);\n\n  const displayMore = () => {\n    const batchSize = 50;\n    const newNumDisplayed = numDisplayed + batchSize > data.length\n      ? data.length\n      : numDisplayed + batchSize;\n    setNumDisplayed(newNumDisplayed);\n  };\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      setIsLoading(true);\n      Converter.findSimilarEuclidean(input)\n        .then(results => {\n          setData(results);\n          setError(null);\n          setNumDisplayed(50);\n        }).catch(e => {\n          setError(e);\n          setData([]);\n        }).finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [input]);\n\n  return (\n    <React.Fragment>\n      {isLoading && (\n        <h1 className={classes.loading}>Loading...</h1>\n      )}\n      {!isLoading && error && (\n        <div>\n          <p>{error}</p>\n        </div>\n      )}\n      {!isLoading && !error && data.length !== 0 && (\n        <React.Fragment>\n          <div className={classes.title}>\n            <h1>\n              Converting {input}\n            </h1>\n            <div style={{ backgroundColor: input }} />\n          </div>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Display</TableCell>\n                <TableCell>Xterm</TableCell>\n                <TableCell>RGB</TableCell>\n                <TableCell>HEX</TableCell>\n                <TableCell className={classes.mobileHidden}>HSL</TableCell>\n                <TableCell className={classes.mobileHidden}>\n                  Similarity\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.slice(0, numDisplayed).map((data, index) => (\n                <TableRow key={index}>\n                  <TableCell style={{ backgroundColor: data.hexString }} />\n                  <TableCell>{data.colorId}</TableCell>\n                  <TableCell>{data.rgb}</TableCell>\n                  <TableCell>{data.hexString}</TableCell>\n                  <TableCell className={classes.mobileHidden}>\n                    {data.hsl}\n                  </TableCell>\n                  <TableCell className={classes.mobileHidden}>\n                    {data.similarity}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          {numDisplayed < data.length && (\n            <Button\n              className={classes.button}\n              color=\"secondary\"\n              variant=\"text\"\n              onClick={() => displayMore()}\n            >\n              Show more\n            </Button>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Output);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Divider } from '@material-ui/core';\n\nconst styles = {\n  root: {\n    margin: '5em 0 2em',\n    fontSize: '0.5em'\n  }\n};\n\nconst Footer = ({ classes }) => (\n  <div className={classes.root}>\n    <Divider />\n    <p>\n      This webpage was created and is maintained by&nbsp;\n      <a\n        href=\"https://github.com/mingyugao\"\n        rel=\"noopener noreferrer\"\n      >\n        Mingyu Gao\n      </a>\n      .\n    </p>\n  </div>\n);\n\nexport default withStyles(styles)(Footer);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Container,\n  Divider\n} from '@material-ui/core';\nimport Header from './components/Header';\nimport Input from './components/Input';\nimport Output from './components/Output';\nimport Footer from './components/Footer';\n\nconst styles = theme => ({\n  root: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      paddingTop: '50px'\n    },\n    '& p': {\n      padding: '0 5%',\n      lineHeight: '1.3em'\n    },\n    '& a': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n      transition: 'all 100ms linear 0s',\n      '&:hover': {\n        color: theme.palette.secondary.light,\n        textDecoration: 'underline'\n      }\n    }\n  }\n});\n\nconst App = ({\n  classes\n}) => {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = value => {\n    if (value) setInput(value);\n  };\n\n  return (\n    <Container\n      className={classes.root}\n      maxWidth=\"md\"\n    >\n      <div>\n        <Header />\n        <p>\n          Find the nearest 8-bit (Xterm) color of a HEX or RGB color.\n          For a full list of the Xterm colors, see this reference:&nbsp;\n          <a\n            href=\"https://jonasjacek.github.io/colors\"\n            rel=\"noopener noreferrer\"\n          >\n            256 Colors Cheat Sheet\n          </a>\n          .\n        </p>\n        <Input\n          handleSubmit={handleSubmit}\n        />\n        <Divider />\n        <Output input={input} />\n      </div>\n      <Footer />\n    </Container>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  MuiThemeProvider,\n  createMuiTheme\n} from '@material-ui/core/styles';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ff7875',\n      light: '#ff918f'\n    },\n    secondary: {\n      main: '#40a9ff',\n      light: '#096dd9'\n    }\n  },\n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}