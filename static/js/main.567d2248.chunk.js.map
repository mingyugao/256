{"version":3,"sources":["Converter.js","components/Header.js","components/Input.js","components/Output.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["data","withStyles","theme","root","width","height","margin","background","color","cursor","fontSize","lineHeight","fontWeight","textAlign","breakpoints","down","position","top","left","classes","className","display","justifyContent","up","padding","flexDirection","boxShadow","transition","backgroundColor","palette","primary","light","input","flexGrow","marginRight","marginBottom","handleSubmit","useState","value","setValue","OutlinedInput","autoFocus","placeholder","onChange","e","target","onKeyPress","key","blur","handleKeyPress","Button","variant","onClick","getData","a","fetch","response","json","parseToAbstractRGB","string","startsWith","length","substring","toLowerCase","split","every","digit","includes","hexString","numsString","rStr","gStr","bStr","convertDigit","mapToNum","char","isNaN","parseInt","firstChar","secondChar","R","G","B","parseHex","replace","endsWith","nums","member","num","parseFloat","Number","isInteger","isRGB","rgbString","map","parseRGB","preprocessPalette","colors","rgb","r","g","b","sortByClosest","origin","results","helper","newPalette","closest","Diff","push","filter","colorId","postprocessPalette","hsl","h","s","l","Promise","res","rej","loading","title","alignItems","marginTop","maxWidth","borderRadius","button","transform","mobileHidden","isInitialMount","useRef","isLoading","setIsLoading","setData","error","setError","numDisplayed","setNumDisplayed","useEffect","current","Converter","then","catch","finally","Fragment","style","Table","table","TableHead","TableRow","TableCell","TableBody","slice","index","newNumDisplayed","displayMore","Divider","href","rel","minHeight","paddingTop","secondary","main","textDecoration","setInput","Container","Boolean","window","location","hostname","match","createMuiTheme","typography","textTransform","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.567d2248.chunk.js","sourcesContent":["import Diff from 'color-diff';\n\nlet data;\nconst publicPath = process.env.NODE_ENV === 'development'\n  ? ''\n  : '/color-converter';\n\nconst getData = async () => {\n  if (!data) {\n    const response = await fetch(`${publicPath}/data.json`);\n    data = await response.json();\n  }\n  return data;\n};\n\nconst isHex = string => {\n  return (\n    string.startsWith('#') &&\n    string.length === 7 &&\n    string.substring(1).toLowerCase().split('').every((digit) => {\n      return '0123456789abcdef'.split('').includes(digit);\n    })\n  );\n};\n\nconst isRGB = string => {\n  string = string.toLowerCase().replace(/\\s/g,'');\n  if (string.startsWith('rgb(') && string.endsWith(')')) {\n    const nums = string.substring(4, string.length - 1).split(',');\n    return (\n      nums.length === 3 &&\n      nums.every(member => {\n        const num = parseFloat(member);\n        return (\n          !isNaN(num) &&\n          Number.isInteger(num) &&\n          num >= 0 &&\n          num <= 255\n        );\n      })\n    );\n  };\n  return false;\n};\n\nconst parseHex = hexString => {\n  const numsString = hexString.substring(1);\n  const rStr = numsString.substring(0, 2);\n  const gStr = numsString.substring(2, 4);\n  const bStr = numsString.substring(4, 6);\n\n  const convertDigit = digit => {\n    const mapToNum = char => {\n      if (isNaN(parseInt(char))) {\n        return {\n          'a': 10,\n          'b': 11,\n          'c': 12,\n          'd': 13,\n          'e': 14,\n          'f': 15\n        }[char.toLowerCase()];\n      }\n      return parseInt(char);\n    };\n\n    const firstChar = digit.substring(0, 1);\n    const secondChar = digit.substring(1);\n    return mapToNum(firstChar) * 16 + mapToNum(secondChar);\n  };\n\n  return {\n    R: convertDigit(rStr),\n    G: convertDigit(gStr),\n    B: convertDigit(bStr)\n  };\n};\n\nconst parseRGB = rgbString => {\n  rgbString = rgbString.replace(/\\s/g,'');\n  const nums = rgbString\n    .substring(4, rgbString.length - 1)\n    .split(',')\n    .map(num => parseInt(num));\n\n  return {\n    R: nums[0],\n    G: nums[1],\n    B: nums[2]\n  };\n};\n\nconst parseToAbstractRGB = input => {\n  if (isHex(input)) {\n    return parseHex(input);\n  } else if (isRGB(input)) {\n    return parseRGB(input);\n  }\n  return null;\n};\n\nconst preprocessPalette = colors => {\n  return colors.data.map(color => ({\n    ...color,\n    R: color.rgb.r,\n    G: color.rgb.g,\n    B: color.rgb.b\n  }));\n};\n\nconst sortByClosest = (origin, palette) => {\n  const results = [];\n\n  const helper = newPalette => {\n    if (!newPalette.length) return;\n    const closest = Diff.closest(origin, newPalette);\n    results.push(closest);\n    const filtered = newPalette.filter(color => {\n      return color.colorId !== closest.colorId;\n    });\n    helper(filtered);\n  };\n\n  helper(palette);\n  return results;\n};\n\nconst postprocessPalette = colors => {\n  return colors.map(color => ({\n    ...color,\n    rgb: `rgb(${color.rgb.r},${color.rgb.g},${color.rgb.b})`,\n    hsl: `hsl(${color.hsl.h},${color.hsl.s}%,${color.hsl.l}%)`,\n  }));\n};\n\nconst findSimilar = input => {\n  return new Promise(async (res, rej) => {\n    const colors = await getData();\n    const palette = preprocessPalette(colors);\n    const origin = parseToAbstractRGB(input);\n\n    if (!origin) {\n      return rej(`${input} is not a valid HEX or RGB color.`);\n    }\n\n    let results = sortByClosest(origin, palette);\n    results = postprocessPalette(results);\n\n    res(results);\n  });\n};\n\nexport default { findSimilar };\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    height: '50px',\n    margin: '0 0 2rem',\n    background: 'linear-gradient(45deg, #fe6b8b 30%, #ff8e53 90%)',\n    color: '#ffffff',\n    cursor: 'default',\n    fontSize: '2em',\n    lineHeight: '50px',\n    fontWeight: 'lighter',\n    textAlign: 'center',\n    [theme.breakpoints.down('sm')]: {\n      position: 'absolute',\n      top: '0',\n      left: '0'\n    }\n  }\n});\n\nconst Header = ({ classes }) => (\n  <header className={classes.root}>\n    COLOR CONVERTER\n  </header>\n);\n\nexport default withStyles(styles)(Header);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  OutlinedInput,\n  Button\n} from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '0 0 2em',\n    [theme.breakpoints.up('md')]: {\n      padding: '0 20%'\n    },\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column'\n    },\n    '& > button': {\n      color: '#ffffff',\n      boxShadow: 'none',\n      transition: 'all 100ms linear 0s',\n      '&:hover': {\n        backgroundColor: theme.palette.primary.light,\n        boxShadow: 'none'\n      }\n    }\n  },\n  input: {\n    flexGrow: '1',\n    [theme.breakpoints.up('md')]: {\n      marginRight: '1em'\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: '0.5em'\n    }\n  }\n});\n\nconst Input = ({\n  classes,\n  handleSubmit\n}) => {\n  const [value, setValue] = useState('');\n\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSubmit(value);\n      e.target.blur();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <OutlinedInput\n        className={classes.input}\n        autoFocus\n        placeholder=\"Try a color, e.g #ff7875 or rgb(255,145,143)\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        onKeyPress={e => handleKeyPress(e)}\n      />\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={() => handleSubmit(value)}\n      >\n        CONVERT\n      </Button>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Input);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button\n} from '@material-ui/core';\nimport Converter from '../Converter';\n\nconst styles = theme => ({\n  loading: {\n    textAlign: 'center'\n  },\n  title: {\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: '1em'\n    },\n    '& > h1': {\n      margin: '0.5em',\n      [theme.breakpoints.down('sm')]: {\n        maxWidth: '75%',\n        fontSize: '1.5em'\n      }\n    },\n    '& > div': {\n      width: '50px',\n      height: '50px',\n      borderRadius: '50%'\n    }\n  },\n  button: {\n    position: 'relative',\n    left: '50%',\n    transform: 'translate(-50%, 50%)'\n  },\n  mobileHidden: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  }\n});\n\nconst Output = ({\n  classes,\n  input\n}) => {\n  const isInitialMount = useRef(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [numDisplayed, setNumDisplayed] = useState(50);\n\n  const displayMore = () => {\n    const batchSize = 25;\n    const newNumDisplayed = numDisplayed + batchSize > data.length\n      ? data.length\n      : numDisplayed + batchSize;\n    setNumDisplayed(newNumDisplayed);\n  };\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      setIsLoading(true);\n      Converter.findSimilar(input).then(results => {\n        setData(results);\n        setError(null);\n        setNumDisplayed(25);\n      }).catch(e => {\n        setError(e);\n        setData([]);\n      }).finally(() => {\n        setIsLoading(false);\n      });\n    }\n  }, [input]);\n\n  return (\n    <React.Fragment>\n      {isLoading && (\n        <h1 className={classes.loading}>Loading...</h1>\n      )}\n      {!isLoading && error && (\n        <div>\n          <p>{error}</p>\n        </div>\n      )}\n      {!isLoading && !error && data.length !== 0 && (\n        <React.Fragment>\n          <div className={classes.title}>\n            <h1>\n              Converting {input}\n            </h1>\n            <div style={{ backgroundColor: input }} />\n          </div>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <TableCell>Display</TableCell>\n                <TableCell>Xterm</TableCell>\n                <TableCell>RGB</TableCell>\n                <TableCell>HEX</TableCell>\n                <TableCell className={classes.mobileHidden}>HSL</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.slice(0, numDisplayed).map((data, index) => (\n                <TableRow key={index}>\n                  <TableCell style={{ backgroundColor: data.hexString }} />\n                  <TableCell>{data.colorId}</TableCell>\n                  <TableCell>{data.rgb}</TableCell>\n                  <TableCell>{data.hexString}</TableCell>\n                  <TableCell className={classes.mobileHidden}>\n                    {data.hsl}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          {numDisplayed < data.length && (\n            <Button\n              className={classes.button}\n              color=\"secondary\"\n              variant=\"text\"\n              onClick={() => displayMore()}\n            >\n              Show more\n            </Button>\n          )}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(Output);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Divider } from '@material-ui/core';\n\nconst styles = {\n  root: {\n    margin: '5em 0 2em',\n    fontSize: '0.5em'\n  }\n};\n\nconst Footer = ({ classes }) => (\n  <div className={classes.root}>\n    <Divider />\n    <p>\n      This webpage was created and is maintained by&nbsp;\n      <a\n        href=\"https://github.com/mingyugao\"\n        rel=\"noopener noreferrer\"\n      >\n        Mingyu Gao\n      </a>\n      .\n    </p>\n  </div>\n);\n\nexport default withStyles(styles)(Footer);\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  Container,\n  Divider\n} from '@material-ui/core';\nimport Header from './components/Header';\nimport Input from './components/Input';\nimport Output from './components/Output';\nimport Footer from './components/Footer';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      minHeight: '94vh',\n      paddingTop: '50px'\n    },\n    [theme.breakpoints.up('md')]: {\n      minHeight: '100vh',\n    },\n    '& p': {\n      padding: '0 5%',\n      lineHeight: '1.3em'\n    },\n    '& a': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n      transition: 'all 100ms linear 0s',\n      '&:hover': {\n        color: theme.palette.secondary.light,\n        textDecoration: 'underline'\n      }\n    }\n  }\n});\n\nconst App = ({\n  classes\n}) => {\n  const [input, setInput] = useState('');\n\n  const handleSubmit = value => {\n    if (value) setInput(value);\n  };\n\n  return (\n    <Container\n      className={classes.root}\n      maxWidth=\"md\"\n    >\n      <div>\n        <Header />\n        <p>\n          Find the nearest 8-bit (Xterm) color of a HEX or RGB color.\n          For a full list of the Xterm colors, see this reference:&nbsp;\n          <a\n            href=\"https://jonasjacek.github.io/colors\"\n            rel=\"noopener noreferrer\"\n          >\n            256 Colors Cheat Sheet\n          </a>\n          .\n        </p>\n        <Input\n          handleSubmit={handleSubmit}\n        />\n        <Divider />\n        <Output input={input} />\n      </div>\n      <Footer />\n    </Container>\n  );\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  MuiThemeProvider,\n  createMuiTheme\n} from '@material-ui/core/styles';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ff7875',\n      light: '#ff918f'\n    },\n    secondary: {\n      main: '#40a9ff',\n      light: '#096dd9'\n    }\n  },\n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  }\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}